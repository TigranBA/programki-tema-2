def secant_method(x0, x1, tol=1e-6, max_iter=100):
    for _ in range(max_iter):
        f_x0 = x0**3 - 4*x0 - 9
        f_x1 = x1**3 - 4*x1 - 9
        if abs(f_x1 - f_x0) < tol:
            break
        x2 = x1 - f_x1 * (x1 - x0) / (f_x1 - f_x0)
        if abs(x2 - x1) < tol:
            return x2
        x0, x1 = x1, x2
    return x1

x0, x1 = 2, 3  # Начальные приближения
root = secant_method(x0, x1)
print(f"Корень уравнения методом секущих: {root:.6f}")


#include <iostream>
#include <cmath>

using namespace std;

double secant_method(double x0, double x1, double tol = 1e-6, int max_iter = 100) {
    for (int i = 0; i < max_iter; ++i) {
        double f_x0 = pow(x0, 3) - 4*x0 - 9;
        double f_x1 = pow(x1, 3) - 4*x1 - 9;
        if (abs(f_x1 - f_x0) < tol) break;

        double x2 = x1 - f_x1 * (x1 - x0) / (f_x1 - f_x0);
        if (abs(x2 - x1) < tol) return x2;
        x0 = x1;
        x1 = x2;
    }
    return x1;
}

int main() {
    double x0 = 2, x1 = 3;
    double root = secant_method(x0, x1);
    cout << "Корень уравнения методом секущих: " << root << endl;
    return 0;
}
